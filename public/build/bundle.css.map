{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "CreatePollForm.svelte",
    "Footer.svelte",
    "Header.svelte",
    "PollDetails.svelte",
    "PollList.svelte",
    "Button.svelte",
    "Card.svelte",
    "Tabs.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Header from './components/Header.svelte';\n\timport Footer from './components/Footer.svelte';\n\n\timport PollsContent from './PollsContent.svelte';\n\timport GistContent from './GistContent.svelte';\n\n\t//navigation\n\tlet mainNav = ['Polls', 'GIST', 'Placeholder'];\n\tlet currentPage = 'Polls';\n\tconst activePage = (e) => {\n\t\tcurrentPage = e.detail;\n\t}\n\n</script>\n\n<style>\n\tmain {max-width:800px; margin:40px auto;}\n</style>\n\n<Header {mainNav} {currentPage} on:activatePage={activePage}/>\n<main>\n\t{#if currentPage === 'Polls'}\n\t\t<PollsContent />\n\t{:else if currentPage === 'GIST'}\n\t\t<GistContent />\n\t{:else if currentPage === 'Placeholder'}\n\t\t<p style=\"text-align:center;\">This page intentionally left blank</p>\n\t{/if}\n</main>\n<Footer />\n",
    "<script>\r\n    import {createEventDispatcher} from 'svelte';\r\n    import Button from '../shared/Button.svelte';\r\n    \r\n    let dispatch = createEventDispatcher();\r\n    let fields = {question: '', optionA: '', optionB: ''}\r\n    let errors = {question: '', optionA: '', optionB: ''}\r\n    let valid = false;\r\n   \r\n    const submitHandler = () => {\r\n        valid = true;\r\n\r\n        //validate question\r\n        if (fields.question.trim().length < 5){\r\n            valid = false;\r\n            errors.question = 'Question Must be at least 5 characters long';\r\n        } else {\r\n            errors.question = '';\r\n        }\r\n\r\n        //validate optionA\r\n        if (fields.optionA.trim().length < 1){\r\n            valid = false;\r\n            errors.optionA = 'Option cannot be empty';\r\n        } else {\r\n            errors.optionA = '';\r\n        }\r\n\r\n        //validate optionB\r\n        if (fields.optionB.trim().length < 1){\r\n            valid = false;\r\n            errors.optionB = 'Option cannot be empty';\r\n        } else {\r\n            errors.optionB = '';\r\n        }\r\n\r\n        if(valid){\r\n            let poll = {...fields, votesA: 0, votesB: 0, id: Math.floor(Math.random() * 10000)}\r\n            \r\n            dispatch('add', poll);\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    form {width:400px; margin:0 auto; padding:20px; border:1px #ccc solid; border-radius:5px;}\r\n        .form-field {margin:20px auto;}\r\n        label{margin:0 0 10px 0; display:block; font-size:14px;}\r\n        input[type=\"text\"] {width:100%; border:1px #ccc solid; border-radius: 5px;}\r\n        .submit {text-align:center;}\r\n        .error {padding:5px 0; font-size:13px; color:hsl(0, 75%, 55%);}\r\n       \r\n</style>\r\n\r\n<form on:submit|preventDefault={submitHandler}>\r\n    <div class=\"form-field\">\r\n        <label for=\"question\">Poll Question:</label>\r\n        <input type=\"text\" id=\"question\" bind:value={fields.question}>\r\n        <div class=\"error\">{errors.question}</div>\r\n    </div>\r\n    <div class=\"form-field\">\r\n        <label for=\"option-a\">Option A:</label>\r\n        <input type=\"text\" id=\"option-a\" bind:value={fields.optionA}>\r\n        <div class=\"error\">{errors.optionA}</div>\r\n    </div>\r\n    <div class=\"form-field\">\r\n        <label for=\"option-b\">Option B:</label>\r\n        <input type=\"text\" id=\"option-b\" bind:value={fields.optionB}>\r\n        <div class=\"error\">{errors.optionB}</div>\r\n    </div>\r\n    <div class=\"submit\">\r\n        <Button btnColor=\"pink\">Add Poll</Button>\r\n    </div>\r\n</form>",
    "<script>\r\n\r\n</script>\r\n\r\n<style>\r\n    footer {\r\n        width:100%; height:40px; margin:0 auto; padding: 10px;\r\n        text-align:center;\r\n    }\r\n    .copyright {padding:20px 30px; display:inline-block; border-top:1px #ccc solid;}\r\n</style>\r\n\r\n<footer>\r\n    <div class=\"copyright\">\r\n        Svelte Camp 2020\r\n    </div>\r\n</footer>",
    "<script>\r\n    import {createEventDispatcher} from 'svelte';\r\n    const dispatch = createEventDispatcher();\r\n\r\n    export let mainNav;\r\n\texport let currentPage; \r\n\r\n</script>\r\n\r\n<style>\r\n    header {\r\n        width:100%; margin:0 auto; display:inline-block;\r\n        background-color:#e6e6e6\r\n    }\r\n    h1 {font-size:24px; padding:10px 20px; display:inline-block;}\r\n    .main-nav, .main-nav ul {display:inline-block; margin:0; padding:0;}\r\n        .main-nav li{padding:10px 20px; display:inline-block; }\r\n        .main-nav a {color:rgb(255, 126, 20);}\r\n            .main-nav a.active {color:rgb(255, 0, 119);}\r\n    \r\n</style>\r\n\r\n<header>\r\n    <h1>Svelte Camp</h1>\r\n    <nav class=\"main-nav\">\r\n        \r\n        <ul>\r\n            {#each mainNav as navItem}\r\n            <li on:click={() => dispatch('activatePage', navItem)}>\r\n                <a href=\"#{navItem}\" class:active={navItem === currentPage} on:click=\"{() => currentPage = navItem}\">{navItem}</a>\r\n            </li>\r\n            {/each}\r\n        </ul>\r\n    </nav>\r\n</header>",
    "<script> \r\n    \r\n    export let poll;\r\n\r\n    import { createEventDispatcher } from 'svelte';\r\n    const dispatch = createEventDispatcher();\r\n\r\n    //reactive values\r\n    $: totalVotes = poll.votesA + poll.votesB\r\n\r\n   //handling votes\r\n   const handleVote = (option, id) => {\r\n        dispatch('vote', {option, id});\r\n        console.log(option, id);\r\n        \r\n   };\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n    .poll h3 {font-size:16px; color:hsl(332, 100%, 50%)}\r\n    .totalVotes {font-size:12px; color:hsl(0, 0%, 47%);}\r\n    .option {margin:10px auto; padding: 5px 10px; background: hsl(0, 0%, 90%); border-radius:2px;}\r\n        .option:hover {color:hsl(0, 0%, 20%); background: hsl(0, 0%, 93%); cursor:pointer }\r\n</style>\r\n\r\n<div class=\"poll\">\r\n    <h3>{poll.question}</h3>\r\n    <span class=\"totalVotes\">(total: {totalVotes})</span>\r\n    <div class=\"option\" on:click={() => handleVote('a', poll.id)}>\r\n        <div class=\"percent percent-a\"></div>\r\n        <span>{poll.optionA} ({poll.votesA})</span>\r\n        \r\n    </div>\r\n    <div class=\"option\" on:click={() => handleVote('b', poll.id)}>\r\n        <div class=\"percent percent-b\"></div>\r\n        <span>{poll.optionB} ({poll.votesB})</span>    \r\n    </div>\r\n    \r\n</div>",
    "<script>\r\n    import Card from '../shared/Card.svelte';\r\n    import PollDetails from './PollDetails.svelte';\r\n    export let polls = [];\r\n</script>\r\n\r\n<style>\r\n    .poll-list {display:grid; grid-template-columns:1fr 1fr; grid-gap:20px;}\r\n    \r\n</style>\r\n\r\n<div class=\"poll-list\">\r\n    {#each polls as poll(poll.id)}\r\n        <Card>\r\n            <PollDetails {poll} on:vote />\r\n        </Card>\r\n\r\n    {/each}\r\n</div>",
    "<script>\r\n    export let btnColor = 'pink';\r\n    //export let textColor = \"white\" this is for passing colors as props\r\n    export let shadow = false;\r\n    export let ghost = false;\r\n</script>\r\n\r\n<style>\r\n    button{\r\n        padding:5px 20px; margin:0 auto; cursor:pointer; \r\n        /*color: var(--text-color); background: var(--bg-color); We can use these to accept the colors as props*/\r\n        border-radius:5px;\r\n    }\r\n    .pink {color:#fff; background: hsl(332, 100%, 50%); border:1px solid hsl(332, 100%, 45%);}\r\n    .pink.ghost {color:hsl(332, 100%, 50%); background: #fff; border:1px hsl(332, 100%, 50%) solid;}\r\n    \r\n    .blue {color:#fff; background: hsl(210, 100%, 50%); border:1px solid hsl(210, 100%, 45%); }\r\n    .blue.ghost {color:hsl(210, 100%, 50%); background: #fff; border:1px hsl(210, 100%, 50%);}\r\n    \r\n    .shadow {box-shadow:0 1px 3px rgba(0,0,0,.5)}\r\n    \r\n</style>\r\n\r\n<button class={btnColor} class:shadow={shadow} class:ghost={ghost}> <!--Put this back in to the button to accept custom colors: style=\"--bg-color: {btnColor}; --text-color: {textColor}\" -->\r\n    <slot></slot>\r\n</button>",
    "<style>\r\n    .card {background: #fff; border:1px hsl(0, 0%, 93%) solid; padding:20px; border-radius:5px; box-shadow:0 2px 4px rgba(0,0,0,.1)}\r\n</style>\r\n\r\n<div class=\"card\">\r\n    <slot></slot>\r\n</div>",
    "<script>\r\n    import {createEventDispatcher} from 'svelte';\r\n    const dispatch = createEventDispatcher();\r\n    \r\n    export let items;\r\n    export let activeItem;\r\n</script>\r\n\r\n<style>\r\n    .tabs ul {margin:0 auto 20px; padding:0; list-style: none; text-align:center;}\r\n        .tabs li {display:inline-block; padding:10px; line-height: 40px; cursor:pointer;}\r\n        .tabs li:hover {color:hsl(27, 100%, 54%)}\r\n    .active {color:hsl(332, 100%, 50%); border-bottom:2px hsl(332, 100%, 50%) solid;}\r\n</style>\r\n\r\n<div class=\"tabs\">\r\n    <ul>\r\n        {#each items as item}\r\n        <li on:click={() => dispatch('tabChange', item)}> <!-- On Click, run an inline function to dispatch a custom event with item as the data-->\r\n            <div class:active={item === activeItem}>{item}</div>\r\n        </li>\r\n        {/each}\r\n    </ul>\r\n</div>"
  ],
  "names": [],
  "mappings": "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"
}